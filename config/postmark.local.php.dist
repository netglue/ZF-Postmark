<?php
declare(strict_types=1);

return [

    /**
     * You can override the endpoint URLs by changing the 'route' parameter for each below.
     * Only postmark will be sending data here, so the url can be as obscure as you like.
     * The defaults are provided below:
     */
    'router' => [
        'routes' => [
            'postmark-outbound-webhook' => [
                'options' => [
                    'route' => '/postmark-outbound-webhook',
                ],
            ],
            'postmark-inbound-webhook' => [
                'options' => [
                    'route' => '/postmark-inbound-webhook',
                ],
            ],
        ],
    ],

    'postmark' => [
        'webhookOptions' => [
            /**
             * Basic Auth.
             * If basic auth is enabled, you must provide a string username and password, in the clear.
             * You'd then setup your Postmark webhook like: https://postmarkUser:Password@mydomain.com/webhookUrl
             * The Realm is usually presented in a login dialog
             */
            'basicAuth' => true,
            'username' => 'someSuperRandomUsername',
            'password' => 'andAPasswordThatNoOneIsGonnaGuess',
            'realm'    => 'Postmark',
            /**
             * Exception handling for the endpoint
             * When true, the webhook controller will wrap and throw any exceptions that occur
             * during execution. This will then go through whatever exception handling is setup on your app, such
             * as displaying an error page etc.
             * When false, a JSON response is returned with 500 status code (Postmark will retry later), and, if a
             * \Psr\Log\LoggerInterface is available in the container, the exception will be logged.
             */
            'throwExceptions' => false,
        ],
    ],

    /**
     * The following delegator factory automatically attaches the example logging listener to the EventEmitter's
     * EventManager instance, therefore, all events will be logged. To disable it, just comment it out or delete it.
     */
    'service_manager' => [
        'delegators' => [
            NetgluePostmark\Service\EventEmitter::class => [
                NetgluePostmark\Container\Listener\LoggingListenerDelegatorFactory::class,
            ],
        ],
    ],
];
